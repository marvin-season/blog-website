"use strict";(self.webpackChunkblog_website=self.webpackChunkblog_website||[]).push([[6221],{5728:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>l});var t=r(9028),i=r(5105),a=r(7890);const o={slug:"functional-programming",title:"Functional Programming",authors:["marvin-season"],tags:["javscript"],date:"2024-01-01"},s=void 0,c={authorsImageUrls:[void 0]},l=[{value:"Currying",id:"currying",level:2},{value:"Currying Function",id:"currying-function",level:3},{value:"Compose",id:"compose",level:2}];function d(n){const e={admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{id:"currying",children:"Currying"}),"\n",(0,i.jsx)(e.p,{children:"Currying is a technique of converting a function that takes multiple arguments into a series of functions that each take a single argument."}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"In short: Using the characteristics of higher-order functions, the function is partially called according to the parameters."})}),"\n","\n",(0,i.jsx)(e.h3,{id:"currying-function",children:"Currying Function"}),"\n",(0,i.jsx)(e.admonition,{type:"tip",children:(0,i.jsxs)(e.p,{children:["Use the ",(0,i.jsx)(e.strong,{children:"curry"})," from the lodash library to curry the function add, and get ",(0,i.jsx)(e.strong,{children:"curriedAdd"})]})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import { curry } from "lodash";\n\nconst add = (p1, p2, p3) => p1 + p2 + p3;\n\nconst curriedAdd = curry(add);\n'})}),"\n",(0,i.jsxs)(e.admonition,{type:"tip",children:[(0,i.jsx)(e.p,{children:"Call with full arguments to get the final result"}),(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"curriedAdd(1, 2, 3); // 6\ncurriedAdd(1)(2)(3); // 6\n"})}),(0,i.jsx)(e.p,{children:"Call with partial arguments to get another functional function curriedAdd100, a function that adds 100"}),(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"const curriedAdd100 = curriedAdd(100);\ncurriedAdd100(2, 3); // 105\n"})}),(0,i.jsx)(e.p,{children:"Before all arguments are called, the returned are all corresponding functional functions"}),(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"const curriedAdd105 = curriedAdd100(5);\ncurriedAdd105(10); // 115\n"})})]}),"\n",(0,i.jsx)(e.h2,{id:"compose",children:"Compose"}),"\n",(0,i.jsx)(e.p,{children:"Compose functions, compose pure functions. For example, a function: f(x) = x^2"}),"\n",(0,i.jsx)(e.p,{children:"The composed functions are like pipelines, executed sequentially from right to left (by default), processing the data."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'import * as R from "ramda";\n\nconst arr = [{ name: "a" }, { name: "b" }];\n// Use compose to arrange appropriate functions to get the data `A.B`\n\nconst func1 = R.compose(\n  R.join("."),\n  R.map(R.compose(R.toUpper, R.prop("name")))\n);\n\nconsole.log(func1(arr)); // expected: A.B\n'})}),"\n",(0,i.jsx)(e.admonition,{type:"tip",children:(0,i.jsx)(e.p,{children:"The various functions used in the above example from the ramda library are all curried. By composing various methods with compose, a new function that can achieve the target functionality is obtained."})})]})}function u(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},7890:(n,e,r)=>{r.d(e,{R:()=>o,x:()=>s});var t=r(8101);const i={},a=t.createContext(i);function o(n){const e=t.useContext(a);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:o(n.components),t.createElement(a.Provider,{value:e},n.children)}},9028:n=>{n.exports=JSON.parse('{"permalink":"/blog/functional-programming","source":"@site/blog/functional-programming/index.mdx","title":"Functional Programming","description":"Currying","date":"2024-01-01T00:00:00.000Z","tags":[{"inline":false,"label":"Javscript","permalink":"/blog/tags/javscript","description":"Javscript tag description"}],"readingTime":1.32,"hasTruncateMarker":true,"authors":[{"name":"marvin-season","title":"Maintainer of Docusaurus","url":"https://github.com/marvin-season","imageURL":"https://avatars.githubusercontent.com/u/64943287?v=4","key":"marvin-season","page":null}],"frontMatter":{"slug":"functional-programming","title":"Functional Programming","authors":["marvin-season"],"tags":["javscript"],"date":"2024-01-01"},"unlisted":false,"prevItem":{"title":"Echart","permalink":"/blog/echart"},"nextItem":{"title":"Vue-grid-layout","permalink":"/blog/vue-grid-layout"}}')}}]);